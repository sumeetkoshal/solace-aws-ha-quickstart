{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a new VPC infrastructure for Solace high availability architecture. **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Solace Parameters"
                    },
                    "Parameters": [
                        "SolaceDockerURL",
                        "AdminPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "NumberOfAZs",
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PublicSubnet3CIDR",
                        "RemoteAccessCIDR",
                        "SSHAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Common Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "LinuxOSAMI",
                        "BootDiskSize"
                    ]
                },
                {
                    "Label": {
                        "default": "MessageRouterInstance Configuration"
                    },
                    "Parameters": [
                        "MessageRouterNodeInstanceType",
                        "MessageRouterNodeStorage",
                        "MessageRouterNodeSpotPrice"
                    ]
                },
                {
                    "Label": {
                        "default": "MonitorInstance Configuration"
                    },
                    "Parameters": [
                        "MonitorNodeInstanceType",
                        "MonitorNodeStorage",
                        "MonitorNodeSpotPrice"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "SolaceDockerURL": {
                    "default": "Solace Docker URL"
                },
                "AdminPassword": {
                    "default": "Password to access SolOS admin console and SEMP"
                }, 
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "NumberOfAZs": {
                    "default": "3"
                },
                "BootDiskSize": {
                    "default": "Boot Disk Capacity (GiB)"
                },
                "MessageRouterNodeInstanceType": {
                    "default": "Instance Type"
                },
                "MessageRouterNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "MessageRouterNodeStorage": {
                    "default": "Persistent Storage"
                },
                "MonitorNodeInstanceType": {
                    "default": "Instance Type"
                },
                "MonitorNodeNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "MonitorNodeNodeStorage": {
                    "default": "Persistent Storage"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "LinuxOSAMI": {
                    "default": "Linux Operating System AMI"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "PublicSubnet3CIDR": {
                    "default": "Public Subnet 3 CIDR"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed External Access CIDR"
                },
                "SSHAccessCIDR": {
                    "default": "Allowed SSH Access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                }
            }
        }
    },
    "Parameters": {
        "SolaceDockerURL": {
            "Description": "URL to Solace Docker Image obtained via registration here: http://dev.solace.com/downloads/download_vmr-ce-docker",
            "Type": "String"
        },
        "AdminPassword": {
            "Description": "Require password to access SolOS admin console and SEMP",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved exctly 3 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "NumberOfAZs": {
            "ConstraintDescription": "3 means each node in own az, 2 puts monitor and backup in one az",
            "Default": "3",
            "Description": "Number of availability zones to use",
            "MaxValue": "3",
            "MinValue": "2",
            "Type": "Number"
        },
        "BootDiskSize": {
            "ConstraintDescription": "Deployment supports 8 to 128 GB for boot volumes",
            "Default": "24",
            "Description": "Allocated EBS storage for boot disk",
            "MaxValue": "128",
            "MinValue": "8",
            "Type": "Number"
        },
        "MessageRouterNodeInstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "c4.xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "t2.large",
            "Description": "Instance Type for Solace Message Router",
            "Type": "String"
        },
        "MessageRouterNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "MessageRouterNodeStorage": {
            "ConstraintDescription": "No more than 1024 GiB per device (4 TiB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 key pair within the AWS region; all instances will launch with this key pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "LinuxOSAMI": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-16.04-LTS-HVM"
            ],
            "ConstraintDescription": "Supported versions of Linux AMIs for Solace Message Routers, use Amazon for now",
            "Default": "Amazon-Linux-HVM",
            "Description": "Operating system AMI for cluster instances; you MUST authorize access to the proper AMI at https://aws.amazon.com/marketplace",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/24",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.129.0/24",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet3CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.130.0/24",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external access to cluster nodes",
            "Type": "String"
        },
        "SSHAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for SSH access to cluster nodes",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/22",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "MonitorNodeInstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "c4.xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "t2.large",
            "Description": "Instance Type for Solace Message Router",
            "Type": "String"
        },
        "MonitorNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "MonitorNodeStorage": {
            "ConstraintDescription": "No more than 1024 GiB per device (4 TiB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "sumeet-aws-vmr-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ca-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Conditions": {
        "Use3AZs": {
            "Fn::Equals": [
                {"Ref": "NumberOfAZs"},
                "3"
            ]
        }
    }, 
    "Resources": {
        "CloudFormationLogs": {
        "Type": "AWS::Logs::LogGroup",
        "Properties": {
            "RetentionInDays": 7
        }
        },
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "DeletionPolicy": "Retain",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "submodules/quickstart-aws-vpc",
                            "templates/aws-vpc.template"
                        ]
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "CreatePrivateSubnets": "false",
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PublicSubnet3CIDR": {
                        "Ref": "PublicSubnet3CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "SolaceStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "DeletionPolicy": "Retain",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/solace-aws.template"
                        ]
                    ]
                },
                "Parameters": {
                    "SolaceDockerURL": {
                        "Ref": "SolaceDockerURL"
                    },
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "MessageRouterNodeInstanceType": {
                        "Ref": "MessageRouterNodeInstanceType"
                    },
                    "MessageRouterNodeSpotPrice": {
                        "Ref": "MessageRouterNodeSpotPrice"
                    },
                    "MessageRouterNodeStorage": {
                        "Ref": "MessageRouterNodeStorage"
                    },
                    "MonitorNodeInstanceType": {
                        "Ref": "MonitorNodeInstanceType"
                    },
                    "MonitorNodeSpotPrice": {
                        "Ref": "MonitorNodeSpotPrice"
                    },
                    "MonitorNodeStorage": {
                        "Ref": "MonitorNodeStorage"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "LinuxOSAMI": {
                        "Ref": "LinuxOSAMI"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "SSHAccessCIDR": {
                        "Ref": "SSHAccessCIDR"
                    },
                    "VPCCIDR": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCCIDR"
                        ]
                    },
                    "SubnetID": {
                        "Fn::If": [
                            "Use3AZs",
                            {
                                    "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet1ID"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet2ID"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet3ID"
                                            ]
                                        }
                                    ]
                                ]
                            },
                            {
                                "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet1ID"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet2ID"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet2ID"
                                            ]
                                        }
                                    ]
                                ]
                            }
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        }
    }
}
